import unittest
import math
from pypact.util.numerical import is_float, get_float, are_values_the_same


class NumericalUnitTest(unittest.TestCase):

    def test_is_float(self):
        self.assertEqual(is_float(""), False)
        self.assertEqual(is_float("-0.000E+00"), True)
        self.assertEqual(is_float("1234567"), True)
        self.assertEqual(is_float("NaN"), True)
        self.assertEqual(is_float("NaNananana BATMAN"), False)
        self.assertEqual(is_float("123.456"), True)
        self.assertEqual(is_float("123.E4"), True)
        self.assertEqual(is_float(".1"), True)
        self.assertEqual(is_float("1,234"), False)
        self.assertEqual(is_float("NULL"), False)
        self.assertEqual(is_float(",1"), False)
        self.assertEqual(is_float("123.EE4"), False)
        self.assertEqual(is_float("6.523537535629999e-07"), True)
        self.assertEqual(is_float("6e777777"), True)
        self.assertEqual(is_float("iNF"), True)
        self.assertEqual(is_float("-iNF"), True)
        self.assertEqual(is_float("infinity"), True)
        self.assertEqual(is_float("1.797693e+308"), True)
        self.assertEqual(is_float("2.65773-317"), True)
        self.assertEqual(is_float("-3.83922-308"), True)
        self.assertEqual(is_float("-4.10537-305"), True)
        self.assertEqual(is_float("1.0+9"), True)
        self.assertEqual(is_float("1.0+1.0"), False)
        self.assertEqual(is_float("1+1.0"), False)
        self.assertEqual(is_float("1+1"), False)
        self.assertEqual(is_float("1-1"), False)
        self.assertEqual(is_float("2.65773-+317"), False)
        self.assertEqual(is_float("2f-317"), False)
        self.assertEqual(is_float("2f-3d"), False)
        self.assertEqual(is_float("2-2+3d"), False)
        self.assertEqual(is_float("12.34.56"), False)
        self.assertEqual(is_float("#56"), False)
        self.assertEqual(is_float("56f"), False)
        self.assertEqual(is_float("56.4d"), False)
        self.assertEqual(is_float("56%"), False)
        self.assertEqual(is_float("0E0"), True)
        self.assertEqual(is_float("x86E0"), False)
        self.assertEqual(is_float(True), True)
        self.assertEqual(is_float("True"), False)
        self.assertEqual(is_float("86-5"), False)
        self.assertEqual(is_float("+1e1^5"), False)
        self.assertEqual(is_float("+1e1"), True)
        self.assertEqual(is_float("-+1"), False)
        self.assertEqual(is_float("-+"), False)
        self.assertEqual(is_float("+"), False)
        self.assertEqual(is_float("-"), False)
        self.assertEqual(is_float("0-0"), False)
        self.assertEqual(is_float("0.0-0"), True)
        self.assertEqual(is_float("(1)"), False)

    def test_get_float(self):
        self.assertEqual(get_float("1234567"), 1234567)
        self.assertEqual(math.isnan(get_float("NaN")), True)
        self.assertEqual(get_float("123.456"), 123.456)
        self.assertEqual(get_float("123.E4"), 123.E4)
        self.assertEqual(get_float(".1"), 0.1)
        self.assertEqual(get_float("6.523537535629999e-07"), 6.523537535629999e-07)
        self.assertEqual(get_float("6e777777"), 6e777777)
        self.assertEqual(math.isinf(get_float("iNF")), True)
        self.assertEqual(math.isinf(get_float("-iNF")), True)
        self.assertEqual(math.isinf(get_float("infinity")), True)
        self.assertEqual(get_float("1.797693e+308"), 1.797693e+308)
        self.assertEqual(get_float("2.65773-317"), 2.65773e-317)
        self.assertEqual(get_float("2.65773+317"), 2.65773e+317)
        self.assertEqual(get_float("2.65773-300"), 2.65773e-300)
        self.assertEqual(get_float("2.65773-31"), 2.65773e-31)
        self.assertEqual(get_float("-3.83922-308"), -3.83922e-308)
        self.assertEqual(get_float("-4.10537-305"), -4.10537e-305)
        self.assertEqual(get_float("1.0+9"), 1.0e+9)
        self.assertEqual(get_float("0E0"), 0.0)
        self.assertEqual(get_float("0.0-0"), 0.0)
        self.assertEqual(get_float("-0.000E+00"), 0.0)
        self.assertEqual(get_float("+1e1"), 10)
        self.assertEqual(get_float("-1e1"), -10)
        self.assertEqual(get_float("-1.1e1"), -11)

    def test_are_values_the_same(self):
        self.assertEqual(are_values_the_same(float('nan'), float('nan'), 0.000), False)
        self.assertEqual(are_values_the_same(float('NaN'), float('NaN'), 0.000), False)
        self.assertEqual(are_values_the_same(float('NaN'), float('NaN'), 0.100), False)
        self.assertEqual(are_values_the_same(float('NaN'), float('NaN')*2.0, 0.000), False)
        self.assertEqual(are_values_the_same(float('NaN'), float('NaN')*2.0, 4.000), False)
        self.assertEqual(are_values_the_same(float('NaN'), float('NaN'), float('NaN')), False)
        self.assertEqual(are_values_the_same(0.0, float('NaN'), float('NaN')), False)
        self.assertEqual(are_values_the_same(0.0, float('NaN'), 1e9), False)
        self.assertEqual(are_values_the_same(2.3, 2.4, float('NaN')), False)
        self.assertEqual(are_values_the_same(2.3, 2.4, 1e-9), False)
        self.assertEqual(are_values_the_same(2.3, 2.4, 1e9), True)
        self.assertEqual(are_values_the_same(0.0, -0.0, 0.000), True)
        self.assertEqual(are_values_the_same(0.0, -0.0, 0.100), True)
        self.assertEqual(are_values_the_same(-0.0, -0.0, 0.000), True)
        self.assertEqual(are_values_the_same(-0.0, -0.0, 0.100), True)
        self.assertEqual(are_values_the_same(-0.0, 0.0, 0.000), True)
        self.assertEqual(are_values_the_same(-0.0, 0.0, 1e-6), True)
        self.assertEqual(are_values_the_same(-0.000E+00, 0.000E+00, 0.000), True)
        self.assertEqual(are_values_the_same(-0.000E+00, 0.000E+00, 0.000E+00), True)
        self.assertEqual(are_values_the_same(-0.000E+00, -0.000E+00, 0.000E+00), True)
        self.assertEqual(are_values_the_same(0.000E+00, -0.000E+00, 0.0), True)
        self.assertEqual(are_values_the_same(0.000E+00, -0.000E+00, 1.000E-06), True)
        self.assertEqual(are_values_the_same(0.0, 0.0, 0.000), True)
        self.assertEqual(are_values_the_same(0.0, 0.0, 0.100), True)
        self.assertEqual(are_values_the_same(0.0, 0.1, 0.000), False)
        self.assertEqual(are_values_the_same(0.0, 0.1, 0.999), False)
        self.assertEqual(are_values_the_same(0.0, 0.1, 1.000), True)
        self.assertEqual(are_values_the_same(1.0, 1.0, 0.000), True)
        self.assertEqual(are_values_the_same(1.0, 1.0, 0.010), True)
        self.assertEqual(are_values_the_same(1.0, 1.1, 0.010), False)
        self.assertEqual(are_values_the_same(1.0, 1.1, 0.091), True)
        self.assertEqual(are_values_the_same(1.0, 1.1, 0.090), False)
        self.assertEqual(are_values_the_same(1.1, 1.0, 0.090), False)
        self.assertEqual(are_values_the_same(-1.1, -1.0, 0.090), False)
        self.assertEqual(are_values_the_same(2.3, 2.3, float('NaN')), False)
        self.assertEqual(are_values_the_same(0.0, 0.0, float('NaN')), False)
        self.assertEqual(are_values_the_same(1.0, 0.0, 1.000), True)
        self.assertEqual(are_values_the_same(1.1, 1.0, 0.091), True)
        self.assertEqual(are_values_the_same(-1.1, -1.0, 0.091), True)
        self.assertEqual(are_values_the_same(0.0, 6.2e-32, 0.0), False)
        self.assertEqual(are_values_the_same(6.2e-32, 0.0, 0.0), False)
        self.assertEqual(are_values_the_same(0.0, -6.2e-32, 0.0), False)
        self.assertEqual(are_values_the_same(-6.2e-32, -6.2e-32, 0.0), True)
        self.assertEqual(are_values_the_same(8.67e-309, -6.2e-32, 0.0), False)
        self.assertEqual(are_values_the_same(8.67e-309, 6.2e-32, 8.67e-309), False)
        self.assertEqual(are_values_the_same(8.67e-309, 8.671e-309, 1e-3), True)
        self.assertEqual(are_values_the_same(get_float("2.65773+317"), 6.2e-32, 0.0), False)
        self.assertEqual(are_values_the_same(get_float("2.65773+317"), 0.0, 0.0), False)
        self.assertEqual(are_values_the_same(get_float("-2.65773-317"), 6.2e-305, 0.0, abs_tol=1e-300), True)
        self.assertEqual(are_values_the_same(get_float("-2.65773-317"), 6.2e-305, 0.0, abs_tol=1e-310), False)
        self.assertEqual(are_values_the_same(get_float("-2.65773-317"), get_float("-2.65773-308"), 0.0, abs_tol=1e-310), False)
        self.assertEqual(are_values_the_same(get_float("-2.65773-317"), get_float("-2.65773-318"), 0.0, abs_tol=1e-310), True)
        self.assertEqual(are_values_the_same(get_float("-2.65773+317"), 0.0, 0.0), False)

